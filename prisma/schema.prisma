// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// Offline database (SQLite) - Main database
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum mode {
  dark
  light
}

enum role {
  admin
  sales
  purchase
}

enum unit {
  kg
  piece
  liter
  meter
}

enum type {
  retail
  wholesale
}

model superAdmin {
  id           String    @id @default(uuid())
  userName     String
  email        String    @unique
  password     String
  role         String
  lastLogin    DateTime?
  warehousesId String?
  sync         Boolean   @default(false) // Sync field
  syncedAt     DateTime? // When last synced
}

model users {
  id           String      @id @default(uuid())
  email        String
  userName     String      @unique
  phoneNumber  String
  password     String
  role         role
  warehouses   Warehouses? @relation(fields: [warehousesId], references: [warehouseCode])
  warehousesId String?
  lastLogin    DateTime?
  sync         Boolean     @default(false) // Sync field
  syncedAt     DateTime?   // When last synced
}

model Settings {
  setting_id      Int       @id
  companyName     String
  companyEmail    String
  phoneNumber     String
  websiteURL      String
  address         String
  logoUrl         String
  defaultCurrency String
  taxRate         Int
  mode            mode
  itermsPerPage   Int
  sync            Boolean   @default(false) // Sync field
  syncedAt        DateTime? // When last synced
}

model Warehouses {
  id            String          @id @default(uuid())
  warehouseCode String          @unique
  name          String
  phoneNumber   String
  email         String
  description   String?
  address       String
  users         users[]
  products      Product[]
  customer      Customer[]
  saleItem      SaleItem[]
  sale          Sale[]
  paymentMethod PaymentMethod[]
  sync          Boolean         @default(false) // Sync field
  syncedAt      DateTime?       // When last synced
}

model Sale {
  id                 String          @id @default(cuid())
  saleItems          SaleItem[]
  selectedCustomerId String? // reference to Customer
  selectedCustomer   Customer?       @relation(fields: [selectedCustomerId], references: [id])
  taxRate            Float
  subTotal           Float
  notes              String?
  amountPaid         Float?
  grandTotal         Float
  paidAmount         Float
  balance            Float
  createdAt          DateTime        @default(now())
  warehousesId       String?
  warehouses         Warehouses?     @relation(fields: [warehousesId], references: [warehouseCode])
  invoiceNo          String          @unique
  paymentMethod      PaymentMethod[]
  sync               Boolean         @default(false) // Sync field
  syncedAt           DateTime?       // When last synced
}

model Customer {
  id           String      @id @default(uuid())
  name         String
  type         type
  companyName  String?
  email        String?
  address      String?
  phone        String?
  Warehouses   Warehouses? @relation(fields: [warehousesId], references: [warehouseCode])
  warehousesId String
  Sale         Sale[]
  sync         Boolean     @default(false) // Sync field
  syncedAt     DateTime?   // When last synced
}

model SaleItem {
  id            String      @id @default(cuid())
  saleId        String?
  sale          Sale?       @relation(fields: [saleId], references: [invoiceNo])
  productId     String?
  product       Product?    @relation(fields: [productId], references: [barcode])
  productName   String
  cost          Float
  selectedPrice Float
  priceType     type
  quantity      Int
  discount      Float
  total         Float
  profit        Float
  Warehouses    Warehouses? @relation(fields: [warehousesId], references: [warehouseCode])
  warehousesId  String?
  sync          Boolean     @default(false) // Sync field
  syncedAt      DateTime?   // When last synced
}

model Product {
  id             String      @id @default(uuid())
  name           String
  barcode        String      @unique
  wholeSalePrice Float
  retailPrice    Float
  cost           Float
  quantity       Int
  taxRate        Int
  unit           unit
  description    String
  warehouses     Warehouses? @relation(fields: [warehousesId], references: [warehouseCode])
  warehousesId   String?
  SaleItem       SaleItem[]
  sync           Boolean     @default(false) // Sync field
  syncedAt       DateTime?   // When last synced
}

model PaymentMethod {
  is           String      @id @default(uuid())
  method       String
  amount       Int
  // notes        String?
  Warehouses   Warehouses? @relation(fields: [warehousesId], references: [warehouseCode])
  warehousesId String?
  Sale         Sale?       @relation(fields: [saleId], references: [invoiceNo])
  saleId       String?
  sync         Boolean     @default(false) // Sync field
  syncedAt     DateTime?   // When last synced
}
